class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        
        int n=nums.size();
        if(n==1)
        {
            return nums[0];
        }
        
        if(nums[0]!=nums[1])
        {
            return nums[0];
        }
        if(nums[n-1]!=nums[n-2])
        {
            return nums[n-1];
        }
        
        int l=0;
        int r=n-1;
        while(l<=r)
        {
            int mid=l+(r-l)/2;
            
            if(nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1])
            {
                return nums[mid];
            }
            
            if(nums[mid]==nums[mid-1])
            {
                int tc=mid-2-l+1;
                if(tc%2!=0)
                {
                    r=mid-2;
                }
                else
                {
                    l=mid+1;
                }
                
            }
            else
            {
                int tc=r-(mid+2)+1;
                 if(tc%2!=0)
                {
                    l=mid+2;
                }
                else
                {
                    r=mid-1;
                }
                
            }
            
        }
     return -1;   
    }
};
