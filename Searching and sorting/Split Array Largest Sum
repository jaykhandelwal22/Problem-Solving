class Solution {
    
    bool isPossible(vector<int>& nums, int m,int mid)
    {
        int c=1;
        int sum=0;
        for(int i=0;i<nums.size();i++)
        {
            sum+=nums[i];
            if(sum>mid)
            {
                c++;
                sum=nums[i];
            }
        }
        return c<=m;
    }
public:
    int splitArray(vector<int>& nums, int m) {
        
        int n=nums.size();
        int low=-1,high,total,ans;
        for(int i=0;i<n;i++)
        {
            low=max(low,nums[i]);
            total+=nums[i];
        }
        high=total;
        
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(isPossible(nums,m,mid))
            {
                ans=mid;
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
            
        }
        return ans;
    }
};
