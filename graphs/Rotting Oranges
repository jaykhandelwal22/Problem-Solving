class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        
         int m=grid.size();
        int n=grid[0].size();
        
        queue<pair<int,int>> q;
        int fr=0;
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]==2)
                {
                    grid[i][j]=3;
                    q.push({i,j});
                }
                else if(grid[i][j]==1)
                {
                    fr++;
                }
            }
        }
        int dx[]={1,-1,0,0};
        int dy[]={0,0,1,-1};
        int ans=-1;
        while(!q.empty())
        {
            ans++;
            
            int l=q.size();
            while(l--)
            {
                int r=q.front().first;
                int c=q.front().second;
                q.pop();
                for(int i=0;i<4;i++)
                {
                    int nr=r+dx[i];
                    int nc=c+dy[i];
                    if(nr>=0 && nc>=0 && nr<m && nc<n && grid[nr][nc]==1)
                    {
                        fr--;
                        grid[nr][nc]=0;
                        q.push({nr,nc});
                    }
                }
                
            }
            
            
        }
        if(fr>0)
        {
            return -1;
        }
        if(ans==-1)
        {
            return 0;
        }
        
        return ans;
        
        
    }
};
